<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="akka" type="Akka.Configuration.Hocon.AkkaConfigurationSection, Akka" />
  </configSections>
  <appSettings>
    <add key="REST_ServiceURL" value="http://localhost:3431/" />
  </appSettings>
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
    </startup>
  <akka>
    <hocon>
      <![CDATA[
					akka {
            persistence {

            journal {
                plugin = "akka.persistence.journal.sqlite"
                
		            sqlite {
		
			            # qualified type name of the SQL Server persistence journal actor
			            class = " Akka.Persistence.Sqlite.Journal.SqliteJournal, Akka.Persistence.Sqlite"

			            # dispatcher used to drive journal actor
			            plugin-dispatcher = "akka.actor.default-dispatcher"

			            # connection string used for database access
			            #connection-string = "FullUri=file::memory:?cache=shared;"
			            connection-string = "Data Source=journal.db;Version=3;"
			
			            # connection string name for .config file used when no connection string has been provided
			            connection-string-name = ""

			            # default SQL commands timeout
			            connection-timeout = 30s

			            # SQL server schema name to table corresponding with persistent journal
			            schema-name = dbo

			            # SQL server table corresponding with persistent journal
			            table-name = event_journal

			            # should corresponding journal table be initialized automatically
			            auto-initialize = true
		            }
	            }

            }
            
						actor {
							provider = "Akka.Cluster.ClusterActorRefProvider, Akka.Cluster"
							deployment {
                /tasker {
									router = consistent-hashing-pool
                    nr-of-instances = 100
									cluster {
											enabled = on
											max-nr-of-instances-per-node = 10
											allow-local-routees = off
											use-role = publication
									}
								}  
							}
						}
						
						remote {
							log-remote-lifecycle-events = DEBUG
							
							helios.tcp {
								transport-class = "Akka.Remote.Transport.Helios.HeliosTcpTransport, Akka.Remote"
								applied-adapters = []
								transport-protocol = tcp
								#will be populated with a dynamic host-name at runtime if left uncommented
								public-hostname = "PrinceCharming"
								hostname = "192.168.0.15"
								port = 16666
							}
						}            

						cluster {
							#will inject this node as a self-seed node at run-time
							seed-nodes = ["akka.tcp://sys@DESKTOP-T71C3RD:4053"] #manually populate other seed nodes here, i.e. "akka.tcp://lighthouse@127.0.0.1:4053", "akka.tcp://lighthouse@127.0.0.1:4044"
							roles = [web]
							#auto-down-unreachable-after = 10s
						}
					}
			]]>
    </hocon>
  </akka>  
  <runtime>  
       <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">  
            <dependentAssembly>  
                 <assemblyIdentity name="System.Data.SQLite" publicKeyToken="db937bc2d44ff139" culture="neutral" />  
                 <bindingRedirect oldVersion="0.0.0.0-1.0.98.0" newVersion="1.0.98.0" />  
            </dependentAssembly>  
       </assemblyBinding>  
  </runtime>
</configuration>